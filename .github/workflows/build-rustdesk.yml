name: Build RustDesk for Windows

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
      
      - name: Cache cargo registry
        uses: actions/cache@v4  # 已升级
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install Windows SDK and dependencies
        run: |
          choco install windows-sdk-10.0 -y
          choco install strawberryperl -y
          choco install nasm -y
          choco install llvm -y
      
      - name: Build RustDesk Client
        run: |
          cd rustdesk
          cargo build --release --features "clipboard,system_tray,dbus,media,software_renderer"
      
      - name: Build RustDesk Server
        run: |
          cd hbbs
          cargo build --release
          cd ../hbbr
          cargo build --release
      
      - name: Run tests
        run: |
          cd rustdesk
          cargo test --release
      
      - name: Create installer
        run: |
          cd rustdesk
          cargo install cargo-wix
          cargo wix --nocapture
      
      - name: Prepare artifacts
        run: |
          mkdir release
          cp rustdesk/target/release/rustdesk.exe release/
          cp rustdesk/target/release/installer/*.msi release/
          cp hbbs/target/release/hbbs.exe release/
          cp hbbr/target/release/hbbr.exe release/
          echo "Version: ${{ github.ref_name }}" > release/version.txt
          echo "Build Date: $(date)" >> release/version.txt
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4  # 已升级
        with:
          name: rustdesk-windows-${{ github.sha }}
          path: release/*
      
      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          tag_name: ${{ github.ref_name }}
          name: RustDesk ${{ github.ref_name }}
          body: |
            RustDesk Windows 版本 ${{ github.ref_name }}
            包含客户端和服务器组件
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
