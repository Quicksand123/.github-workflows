name: Build RustDesk for Windows

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      # 1. 拉取源码（使用官方仓库）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          path: src
          submodules: recursive

      # 2. 设置Rust环境（必须先于依赖安装）
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      # 3. 仅安装基础依赖（跳过不可用的Intel/NVIDIA包）
      - name: Install dependencies
        run: |
          choco install -y windows-sdk-10.0
          choco install -y strawberryperl
          choco install -y nasm
          choco install -y llvm

      # 4. 构建客户端（使用软件渲染）
      - name: Build RustDesk Client
        run: |
          cd src
          cargo build --release --features "software_renderer"

      # 5. 构建服务器
      - name: Build RustDesk Server
        run: |
          cd src/hbbs
          cargo build --release
          cd ../hbbr
          cargo build --release

      # 6. 打包产物
      - name: Prepare artifacts
        run: |
          mkdir release
          cp src/target/release/rustdesk.exe release/
          cp src/hbbs/target/release/hbbs.exe release/
          cp src/hbbr/target/release/hbbr.exe release/
          echo "Version: ${{ github.ref_name }}" > release/version.txt
          date >> release/version.txt

      # 7. 上传产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-${{ github.sha }}
          path: release/*
      
      # 8. 发布到GitHub Release
      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          tag_name: ${{ github.ref_name }}
          name: RustDesk ${{ github.ref_name }}
          body: |
            RustDesk Windows 版本 ${{ github.ref_name }}
            包含客户端和服务器组件
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
